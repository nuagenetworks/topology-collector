- name: copy get-overcloud-nodes.py to undercloud
  copy:
    src: 'get_overcloud_nodes.py'
    dest: '/tmp/get-overcloud-nodes.py'
    mode: 0755

- name: fetch overcloud node names and IPs
  shell: >
      source {{ undercloud_env_file }};
      if python3 -c 'import novaclient.client' > /dev/null 2>&1; then
          python3 /tmp/get-overcloud-nodes.py
      else
          python2 /tmp/get-overcloud-nodes.py
      fi
  register: registered_overcloud_nodes

- name: copy get-overcloud-agents.py to undercloud
  copy:
    src: 'get_overcloud_agents.py'
    dest: '/tmp/get-overcloud-agents.py'
    mode: 0755

- name: fetch overcloud agents
  shell: >
      source {{ osc_env_file }};
      if python3 -c 'import neutronclient.v2_0.client' > /dev/null 2>&1; then
          python3 /tmp/get-overcloud-agents.py
      else
          python2 /tmp/get-overcloud-agents.py
      fi
  register: registered_overcloud_agents

- name: set overcloud hosts fact
  set_fact:
    overcloud_hosts: "{{ registered_overcloud_nodes.stdout | default({}) }}"

- name: set overcloud agents fact
  set_fact:
    overcloud_agents: "{{ registered_overcloud_agents.stdout | default({}) }}"

- name: Add overcloud nodes with Neutron agents to ansible
  with_dict: '{{ overcloud_hosts }}'
  add_host:
    name: '{{ item.key }}'
    groups: "tc_hosts"
    ansible_host: '{{ item.value }}'
    ansible_user: "{{ overcloud_user | default('heat-admin') }}"
    hostname: "{{ overcloud_agents[item.key]['host'] }}"
    service_host: "{{ overcloud_agents[item.key]['host'] }}"
  when: item.key in overcloud_agents.keys()

