---
- name: Wait for ssh to be ready
  wait_for:
    port: "22"
    host: "{{ hostvars[inventory_hostname].ansible_host }}"
    search_regex: OpenSSH
    delay: 1
  delegate_to: localhost

- name: Set agents fact
  set_fact:
    agents: "{{ hostvars['localhost'].overcloud_agents }}"

- name: Generate interface_list
  block:
    - name: Set interfaces fact from Nic Switch Agent
      set_fact:
        interfaces: "{{ agents[inventory_hostname]['configurations']['device_mappings'].values() | flatten }}"
      when:
        - agents[inventory_hostname]['configurations']['device_mappings'] is defined

    - name: Get OVS bridge topologies
      bridgeinfo:
        host: "{{ ovs_manager_ip | default(omit) }}"
        port: "{{ ovs_manager_port | default(omit) }}"
        bridge_mappings: "{{ agents[inventory_hostname]['configurations']['bridge_mappings'] }}"
      register: brinfo
      when:
        - agents[inventory_hostname]['configurations']['bridge_mappings'] is defined

    - name: Set ovs_topology fact for OVS agent hosts
      set_fact:
        ovs_topology: "{{ brinfo.brinfo | dict_to_items | selectattr('key', 'match', interface_regex)  | list | items_to_dict }}"
      when: brinfo is not skipped

    - name: Set ovs_topology fact when bridgeinfo skipped
      set_fact:
        ovs_topology: {}
      when: brinfo is skipped

    - name: Set interface_list fact
      set_fact:
        interface_list: "{{ interfaces| default([]) | union(ovs_topology.keys() | list) }}"

- name: Collect LLDP and VF info
  become: yes
  lldp:
    interfaces: "{{ interface_list }}"
    lldp_timeout: "{{ lldp_timeout | default(30) }}"
    ovs_bridges: "{{ ovs_topology }}"
  register: lldp

- name: Generate topology information
  topology:
    system_name: "{{ inventory_hostname }}"
    interfaces: "{{ lldp.stdout }}"
    ovs_bridges: "{{ ovs_topology | default({}) }}"
  register: interfaces_json
  delegate_to: localhost

- name: Display topology json when verbosity >= 1, skip otherwise
  debug:
    msg: "{{ interfaces_json }}"
    verbosity: 1

- name: Create output file name
  set_fact:
    json_outfile: "{{ temp_dir }}/{{ inventory_hostname }}.json"

- name: Write the json output
  template:
    src: output.j2
    dest: "{{ json_outfile }}"
  delegate_to: localhost

- name: Print out the contents of the json output file when verbosity >= 1, skip otherwise
  debug:
    msg: "{{ lookup('file', '{{ json_outfile }}') }}"
    verbosity: 1
