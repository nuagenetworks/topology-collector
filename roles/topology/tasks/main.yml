---
- name: Make sure tmp directory {{ temp_dir }} exists
  file:
    path: "{{ temp_dir }}"
    state: directory
  delegate_to: localhost

- name: Wait for ssh to be ready
  local_action:
    module: wait_for
    port: "22"
    host: "{{ inventory_hostname }}"
    search_regex: OpenSSH
    delay: 1

- name: Get a list of the matching interfaces for '{{ interface_regex }}'
  interfaces: state=UP regex={{ interface_regex }}
  register: interface_list

- name: Display interface list when verbosity >= 1, skip otherwise
  debug: msg="{{ interface_list.matches }}" verbosity=1

- name: Execute topology collector
  topology: system_name={{ inventory_hostname}} interface={{ item }}
  with_items: "{{ interface_list.matches }}"
  register: interface_json

- name: Display topology json when verbosity >= 1, skip otherwise
  debug: msg="{{ interface_json }}" verbosity=1

- name: Create output file name
  set_fact: json_outfile={{ temp_dir }}/{{ inventory_hostname }}.json

- name: Write the json output to {{ json_outfile }}
  template: src=output.j2 dest={{ json_outfile }}
  delegate_to: 127.0.0.1

- name: Print out the contents of the file {{ json_outfile }} when verbosity >= 1, skip otherwise
  debug: msg="{{ lookup('file', '{{ json_outfile }}') }}" verbosity=1
